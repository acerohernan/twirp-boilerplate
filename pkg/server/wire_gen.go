// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package server

import (
	"github.com/acerohernan/twirp-boilerplate/pkg/config"
	"github.com/acerohernan/twirp-boilerplate/pkg/service"
	"github.com/acerohernan/twirp-boilerplate/pkg/service/v1"
	"github.com/acerohernan/twirp-boilerplate/pkg/service/v2"
	"github.com/acerohernan/twirp-boilerplate/pkg/utils"
)

// Injectors from wire.go:

func InitializeServer(conf *config.Config) (*Server, error) {
	storage := createSessionStorage()
	protoValidator, err := utils.NewProtoValidator()
	if err != nil {
		return nil, err
	}
	authService := servicev1.NewAuthService(storage, protoValidator)
	servicev2AuthService := servicev2.NewAuthService(storage, protoValidator)
	server := NewServer(conf, authService, servicev2AuthService)
	return server, nil
}

// wire.go:

func createSessionStorage() service.Storage {
	return service.NewLocalStorage()
}
